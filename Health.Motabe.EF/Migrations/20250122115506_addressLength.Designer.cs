// <auto-generated />
using System;
using Health.Motabea.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Health.Motabe.EF.Migrations
{
    [DbContext(typeof(HealthAppContext))]
    [Migration("20250122115506_addressLength")]
    partial class addressLength
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Health.Motabea.Core.Models.Patients.Booking", b =>
                {
                    b.Property<string>("BookID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Ordering")
                        .HasColumnType("int");

                    b.Property<string>("PatientID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("RegistTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Repeated")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserLogID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookID");

                    b.HasIndex("PatientID");

                    b.ToTable("BookingTBL", "Patient");
                });

            modelBuilder.Entity("Health.Motabea.Core.Models.Patients.PatientBaseData", b =>
                {
                    b.Property<string>("PatientID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<DateTime>("RegistTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserLogID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PatientID");

                    b.ToTable("PatientBaseTBL", "Patient");
                });

            modelBuilder.Entity("Health.Motabea.Core.Models.Patients.PatientData", b =>
                {
                    b.Property<string>("PatientID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("AgeDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CityID")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("ContactToBird")
                        .HasColumnType("bit");

                    b.Property<string>("CountryID")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("ExSmoker")
                        .HasColumnType("bit");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("GovernID")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Lactating")
                        .HasColumnType("bit");

                    b.Property<bool>("Occup")
                        .HasColumnType("bit");

                    b.Property<string>("OtherPhone")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<bool>("PassiveSmoker")
                        .HasMaxLength(20)
                        .HasColumnType("bit");

                    b.Property<string>("PatientCode")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<bool>("Pregmant")
                        .HasColumnType("bit");

                    b.Property<DateTime>("RegistTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Smoker")
                        .HasColumnType("bit");

                    b.Property<string>("UserLogID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PatientID");

                    b.ToTable("ParientDataTBL", "Patient");
                });

            modelBuilder.Entity("Health.Motabea.Core.Models.Patients.PatientDiag", b =>
                {
                    b.Property<string>("PatDiagID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BookingID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiagID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PatID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("PrimaryDiag")
                        .HasColumnType("bit");

                    b.Property<DateTime>("RegistTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserLogID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PatDiagID");

                    b.HasIndex("BookingID");

                    b.HasIndex("DiagID");

                    b.HasIndex("PatID");

                    b.ToTable("PatDiagTBL", "Patient");
                });

            modelBuilder.Entity("Health.Motabea.Core.Models.Patients.PatientSymptom", b =>
                {
                    b.Property<string>("PatSympID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BookID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PatID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("RegistTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SympID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SympStatus")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("UserLogID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PatSympID");

                    b.HasIndex("BookID");

                    b.HasIndex("PatID");

                    b.HasIndex("SympID");

                    b.ToTable("PatSympTBL", "Patient");
                });

            modelBuilder.Entity("Health.Motabea.Core.Models.Services.Diagnostic", b =>
                {
                    b.Property<string>("DiagID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompTypeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiagnosticName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime>("RegistTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserLogID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DiagID");

                    b.ToTable("DiagnosticTBL", "Service");
                });

            modelBuilder.Entity("Health.Motabea.Core.Models.Services.Symptoms", b =>
                {
                    b.Property<string>("SymptomID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompTypeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegistTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SymptonName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("UserLogID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SymptomID");

                    b.ToTable("SymptomsTBL", "Service");
                });

            modelBuilder.Entity("Health.Motabea.Core.Models.Patients.Booking", b =>
                {
                    b.HasOne("Health.Motabea.Core.Models.Patients.PatientBaseData", "PatientBaseTBL")
                        .WithMany()
                        .HasForeignKey("PatientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PatientBaseTBL");
                });

            modelBuilder.Entity("Health.Motabea.Core.Models.Patients.PatientData", b =>
                {
                    b.HasOne("Health.Motabea.Core.Models.Patients.PatientBaseData", "PatientBaseTBL")
                        .WithMany()
                        .HasForeignKey("PatientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PatientBaseTBL");
                });

            modelBuilder.Entity("Health.Motabea.Core.Models.Patients.PatientDiag", b =>
                {
                    b.HasOne("Health.Motabea.Core.Models.Patients.Booking", "BookingTBL")
                        .WithMany()
                        .HasForeignKey("BookingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Health.Motabea.Core.Models.Services.Diagnostic", "DiagnosticTBL")
                        .WithMany()
                        .HasForeignKey("DiagID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Health.Motabea.Core.Models.Patients.PatientData", "ParientDataTBL")
                        .WithMany()
                        .HasForeignKey("PatID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BookingTBL");

                    b.Navigation("DiagnosticTBL");

                    b.Navigation("ParientDataTBL");
                });

            modelBuilder.Entity("Health.Motabea.Core.Models.Patients.PatientSymptom", b =>
                {
                    b.HasOne("Health.Motabea.Core.Models.Patients.Booking", "BookingTBL")
                        .WithMany()
                        .HasForeignKey("BookID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Health.Motabea.Core.Models.Patients.PatientData", "ParientDataTBL")
                        .WithMany()
                        .HasForeignKey("PatID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Health.Motabea.Core.Models.Services.Symptoms", "SymptomsTBL")
                        .WithMany()
                        .HasForeignKey("SympID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BookingTBL");

                    b.Navigation("ParientDataTBL");

                    b.Navigation("SymptomsTBL");
                });
#pragma warning restore 612, 618
        }
    }
}
