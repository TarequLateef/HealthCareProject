
@if (!string.IsNullOrEmpty(UpdateLinkProp))
{
    <a class="btn hsb-save" @onmouseout=@(()=>mouseOver=false) @onmouseover=@(()=>mouseOver=true)
       title="تحديث" href="@(UpdateLinkProp+"/"+ItemIDProp)"
       style="@(!mouseOver?"color: #fffad4;background-color: #7fadfd;box-shadow: rgb(112 93 116 / 44%) 0px 2px 4px 0px, rgb(68 86 94 / 55%) 0px 2px 16px 0px;":"color: #7fadfd;background-color: #fffad4;")">
        <span class="fas fa-pen"></span>
    </a>
}
else
{
    <button type="button" class="btn hsb-save" @onmouseout=@(()=>mouseOver=false)
            @onmouseover=@(()=>mouseOver=true) style="@(!mouseOver?"color: #fffad4;background-color: #7fadfd;box-shadow: rgb(112 93 116 / 44%) 0px 2px 4px 0px, rgb(68 86 94 / 55%) 0px 2px 16px 0px;"
        :"color: #7fadfd;background-color: #fffad4;")" @onclick="@(()=>EvUpdate.InvokeAsync(ItemIDProp))" title="تحديث"
            data-bs-toggle="modal" data-bs-target="#upIt_@ItemIDProp">
        <span class="fas fa-pen-alt"></span>
    </button>

    <!-- Modal -->
    @if (UpdateSize!=ModalSize.Small)
    {
        <div class="modal fade" id="upIt_@ItemIDProp" tabindex="-1" aria-labelledby="upItLabel_@ItemIDProp"
             aria-hidden="true" data-bs-backdrop="static"
             style="box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 5px;">
            <div class="modal-dialog modal-dialog-centered @(UpdateSize)">
                <div class="modal-content">
                    <div class="modal-body">
                        @ElemUpdateProp
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="modal fade" id="upIt_@ItemIDProp" tabindex="-1" aria-labelledby="upItLabel_@ItemIDProp"
             aria-hidden="true" data-bs-backdrop="static"
             style="box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 5px;">
            <div class="modal-dialog modal-dialog-centered modal-sm">
                <div class="modal-content">
                    <div class="modal-header" style="background-color: #bea1d1;color: #1a1a1e;">
                        
                    </div>
                    <div class="modal-body" style="color:#181934;">
                        @ElemUpdateProp
                    </div>
                    <div class="modal-footer " style="background-color:#cad7c0;">
                        <SaveBtn ModalAttr="modalAttr" EvSave="@(()=>EvUpdate.InvokeAsync(ItemIDProp))"
                                 IsDisable="DisableSaving" />
                        <CancelBtn ModalAttr="modalAttr" />
                    </div>

                </div>
            </div>
        </div>

    }

}

@code {
    bool mouseOver { get; set; } = false;
    [Parameter] public RenderFragment ElemUpdateProp { get; set; }
    [Parameter] public EventCallback<string> EvUpdate { get; set; }
    [Parameter] public string ItemIDProp { get; set; } = string.Empty;
    [Parameter] public string UpdateLinkProp { get; set; } = string.Empty;
    [Parameter] public bool DisableSaving { get; set; } = false;
    [Parameter] public string UpdateSize { get; set; } = ModalSize.Large;
    Dictionary<string, object> modalAttr { get; set; } = new()
    {
            {"data-bs-dismiss","modal"}
    };
}
